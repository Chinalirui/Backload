@{
    ViewBag.Title = "Backload. Professional ASP.NET MVC File Upload Handler - Example 2";
}

@section styles {   
    <!-- Optional: Include jQuery ui themes for the themes switcher -->
    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/themes/dark-hive/jquery-ui.css" id="theme">
    <!-- Optional: We use the jQuery colorbox plugin to view uploaded images when we click on it. -->
    <link href="~/Content/ColorBox/colorbox.css" rel="stylesheet" />
    <!-- Optional: Some styles for this demo page -->
    <link href="~/Content/styles.css" rel="stylesheet" />
}    
    

@section scripts {
    <!-- Optional: We use the jQuery colorbox plugin to view uploaded images when we click on it. -->
    <script src="~/Scripts/ColorBox/jquery.colorbox-min.js"></script>
    <script type="text/javascript" src="~/Scripts/main.js"></script>
}
<div class="ex-head">
<h2><span class="bl">Backload.</span>&nbsp;&nbsp;A professional File Upload handler</h2>
    <span class="theme-switcher-info">Select a jQuery ui theme:</span>
    <select id="theme-switcher" class="theme-switcher">
        <option value="base">Base</option>
        <option value="black-tie">Black Tie</option>
        <option value="blitzer">Blitzer</option>
        <option value="cupertino">Cupertino</option>
        <option value="dark-hive" selected>Dark Hive</option>
        <option value="dot-luv">Dot Luv</option>
        <option value="eggplant">Eggplant</option>
        <option value="excite-bike">Excite Bike</option>
        <option value="flick">Flick</option>
        <option value="hot-sneaks">Hot sneaks</option>
        <option value="humanity">Humanity</option>
        <option value="le-frog">Le Frog</option>
        <option value="mint-choc">Mint Choc</option>
        <option value="overcast">Overcast</option>
        <option value="pepper-grinder">Pepper Grinder</option>
        <option value="redmond">Redmond</option>
        <option value="smoothness">Smoothness</option>
        <option value="south-street">South Street</option>
        <option value="start">Start</option>
        <option value="sunny">Sunny</option>
        <option value="swanky-purse">Swanky Purse</option>
        <option value="trontastic">Trontastic</option>
        <option value="ui-darkness">UI Darkness</option>
        <option value="ui-lightness">UI Lightness</option>
        <option value="vader">Vader</option>
    </select>

    <div class="ex-desc">This is a demo in a series of examples showing the usage and features of <span class="bl">Backload.</span>, a professional full featured ASP.NET MVC file upload server side controller/handler, In this demo
        we're using the popular <a href="https://github.com/blueimp/jQuery-File-Upload" target="_blank">jQuery File Upload plugin from blueimp</a> in the jQuery ui version, but you can also use the bootstrap version. This has no influence on the <span class="bl">Backload.</span> controller. 
        For more information on the client side plugin see <a href="https://github.com/blueimp/jQuery-File-Upload" target="_blank">here</a>.<br />
        <span class="ex-imp">Important note:</span> This example uses jQuery 2.0. Older Browsers (e.g. IE < 9) are <a href="http://blog.jquery.com/2013/04/18/jquery-2-0-released/" target="_blank">not supported</a> anymore since v2.0! Use jQuery v1.9.1 if you need support for older browsers.
    </div>
</div>
<div class="ex-inf">
<h2>Example 13: Use tracing to identify problems and log errors</h2>
    <p>Since version 1.9.2 standard .NET tracing is implemented in <span class="bl">Backload.</span> You can bind multiple different trace listeners to the <code>TraceSource</code> Backload provides.
        Backload uses the <code>TraceSource/TraceEvent</code> mechanism to output trace messages. This enables you to set different levels of trace events to be received: Off, Critical, Error, Warning, Information and Verbose.
        Backload uses all this levels. If you set the level to Off, tracing is disabled. In this demo we've added 4 different trace listeners to receive trace events. 
        A <code>TextWriterTraceListener</code> to save errors to a log file (text), a XmlWriterTraceListener to log to a XML file for the Microsoft Service Trace Viewer, a Ukadc.Diagnostics FileTraceListener (CodePlex)
        and Glimpse to show Trace messages on the website itself. Note: Glimpse has known problems with asynchronous code, so it stops tracing when asynchronous code is executed.   
    </p>
</div>


<!-- BEGIN: jQuery Fle Upload Plugin -->
<form id="fileupload" action="/FileUpload/FileHandler" method="POST" enctype="multipart/form-data">
<div class="ex-fup">
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="row fileupload-buttonbar">
        <div class="span7">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="icon-plus icon-white"></i>
                <span>Add files...</span>
                <input type="file" name="files[]" multiple>
            </span>
            <button type="submit" class="btn btn-primary start">
                <i class="icon-upload icon-white"></i>
                <span>Start upload</span>
            </button>
            <button type="reset" class="btn btn-warning cancel">
                <i class="icon-ban-circle icon-white"></i>
                <span>Cancel upload</span>
            </button>
            <button type="button" class="btn btn-danger delete">
                <i class="icon-trash icon-white"></i>
                <span>Delete</span>
            </button>
            <input type="checkbox" class="toggle">
        </div>
        <!-- The global progress information -->
        <div class="span5 fileupload-progress fade">
            <!-- The global progress bar -->
            <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                <div class="bar" style="width:0%;"></div>
            </div>
            <!-- The extended global progress information -->
            <div class="progress-extended">&nbsp;</div>
        </div>
    </div>
    <!-- The loading indicator is shown during file processing -->
    <div class="fileupload-loading"></div>
    <br>
    <!-- The table listing the files available for upload/download -->
    <table id="demo-fup-table" role="presentation" class="table table-striped ui-widget"><tbody class="files ui-widget-content" data-toggle="modal-gallery" data-target="#modal-gallery"></tbody></table>
</div>
</form>

<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade ui-state-hover" data-type="{%=file.type%}">
        <td class="preview"><span class="fade"></span></td>
        <td class="name"><span>{%=file.name%}</span></td>
        <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
        {% if (file.error) { %}
            <td class="error" colspan="2"><span class="label label-important">Error</span> {%=file.error%}</td>
        {% } else if (o.files.valid && !i) { %}
            <td>
                <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="bar" style="width:0%;"></div></div>
            </td>
            <td>{% if (!o.options.autoUpload) { %}
                <button class="btn btn-primary start">
                    <i class="icon-upload icon-white"></i>
                    <span>Start</span>
                </button>
            {% } %}</td>
        {% } else { %}
            <td colspan="2"></td>
        {% } %}
        <td class="action">{% if (!i) { %}
            <button class="btn btn-warning cancel">
                <i class="icon-ban-circle icon-white"></i>
                <span>Cancel</span>
            </button>
        {% } %}</td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade ui-state-default" data-type="{%=file.extra_info.main_type%}" >
        {% if (file.error) { %}
            <td></td>
            <td class="name"><span>{%=file.name%}</span></td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td class="error" colspan="2"><span class="label label-important">Error</span> {%=file.error%}</td>
        {% } else { %}
            <td class="preview">{% if (file.thumbnail_url) { %}
                <a href="{%=file.url%}" target="_blank" title="{%=file.name%}" data-gallery="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
            {% } %}</td>
            <td class="name">
                <a href="{%=file.url%}" target="_blank" title="{%=file.extra_info.original_name%}" data-gallery="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
            </td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td colspan="2"></td>
        {% } %}
        <td class="action">
            <button class="btn btn-danger delete" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}"{% if (file.delete_with_credentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                <i class="icon-trash icon-white"></i>
                <span>Delete</span>
            </button>
            <input type="checkbox" name="delete" value="1" class="toggle">
        </td>
    </tr>
{% } %}
</script>
<!-- END: jQuery Fle Upload Plugin -->



<div class="ex-inf">
    <h4>Demo 1: Trace events in the Visual Studio output window</h4>
    <p>
        When developing an application, there is an easy way to show the trace events of the component. The Visual Studio output is automatically attached as a DefaultTraceListener to the list of TraceListeners.
        Start the application and notice the trace output Backload produces when requests are been handled.
    </p>
    <pre style="font-family: Consolas; font-size: 13px; color: black; background: white; overflow:hidden">
   ...
   Backload Information: 107003 : Core GET method executed with success. 2 files retrieved.
   ...</pre>
<br />

    <h4>Demo 3: Throw an exception for demo purposes</h4>
    <p>
        In this demo we throw an exception and look if the error is logged. Go the the ~/Controllers/FileUploadController.cs file and uncomment the code below:
    </p>
    <pre style="font-family: Consolas; font-size: 13px; color: black; background: white;"><span style="color:blue;">public</span>&nbsp;<span style="color:blue;">void</span>&nbsp;handler_IncomingRequestStarted(<span style="color:blue;">object</span>&nbsp;sender,&nbsp;Eventing.Args.<span style="color:#2b91af;">IncomingRequestEventArgs</span>&nbsp;e)
{
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">throw</span>&nbsp;<span style="color:blue;">new</span>&nbsp;<span style="color:#2b91af;">Exception</span>(<span style="color:#a31515;">&quot;Demo&nbsp;exception&nbsp;to&nbsp;be&nbsp;shown&nbsp;in&nbsp;the&nbsp;trace&nbsp;output&quot;</span>);
}</pre>
    <p>
        The trace message in the log file (~/logs/backload.log), which we configured to receive only errors, will look like this:<br />
        <code>Backload Error: 10030080 : Exception occured in Environment initialization: Demo exception to be shown in the trace output.</code>
    </p>
    <br />

    <h4>Demo 3: Trace output to log files</h4>
    <p>
        To configure tracing, .NET uses the <code>Web.config</code> and the <code>&lt;System.Diagnostics /&gt;</code> section. Uncomment the code in the <code>Web.config</code> below.
        In this configuration we add 2 listeners to the listeners list, a <code>TextWriterTraceListener</code> which outputs to a log (text) file and a <code>XmlWriterTraceListener</code>
        which outputs xml for the Microsoft Trace Viewer into a file within the existing "~/logs" folder. In the <code>&lt;Switches&gt;</code> subsection we set the trace level to <code>Information</code> 
        in order to listen for all trace events with the level Information and below (Critical, Error, Warning, Information). There's only one higher level: <code>Verbose</code>.
        We also added <code>ActivityTracing</code> to the switch value. With <code>ActivityTracing</code> on, a listener can group trace messages for a 
        specific request into an activity. You can see this in the Microsoft Trace Viewer. If a listener does not use <code>ActivityTracing</code> and multiple requests are handled at the same time
        trace messages are unordered and mixed with other requests.
        For the <code>TextWriterTraceListener</code> listener we have added a filter to output <code>Error-level</code> trace events only.
    </p>
    <pre style="font-family: Consolas; font-size: 13px; color: black; background: white;"><span style="color:blue;">&lt;</span><span style="color:#a31515;">system.diagnostics</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">trace</span><span style="color:blue;">&nbsp;</span><span style="color:red;">autoflush</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">true</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;True,&nbsp;if&nbsp;the&nbsp;content&nbsp;of&nbsp;the&nbsp;trace&nbsp;event&nbsp;cache&nbsp;should&nbsp;be&nbsp;flushed&nbsp;with&nbsp;every&nbsp;trace&nbsp;event&nbsp;(default:&nbsp;false)&nbsp;</span><span style="color:blue;">--&gt;&nbsp;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">sources</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">source</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Backload</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">switchName</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">traceLevel</span>&quot;<span style="color:blue;">&gt;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;name&nbsp;must&nbsp;be&nbsp;&quot;Backload&quot;.&nbsp;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">listeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logfile</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Trace&nbsp;output&nbsp;to&nbsp;log&nbsp;file,&nbsp;but&nbsp;only&nbsp;errors&nbsp;(see&nbsp;filter&nbsp;below)&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">xmlfile</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;XML&nbsp;output&nbsp;for&nbsp;the&nbsp;Microsoft&nbsp;Service&nbsp;Trace&nbsp;Viewer&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">listeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">source</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">sources</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">sharedListeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logfile</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">System.Diagnostics.TextWriterTraceListener</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">initializeData</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logs/backload.log</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">traceOutputOptions</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">DateTime</span>&quot;<span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">filter</span><span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">System.Diagnostics.EventTypeFilter</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">initializeData</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Error</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">Only&nbsp;log&nbsp;errors&nbsp;in&nbsp;this&nbsp;listener</span><span style="color:blue;">--&gt;&nbsp;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">add</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">xmlfile</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">System.Diagnostics.XmlWriterTraceListener</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">initializeData</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logs/backload.svclog</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">traceOutputOptions</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">DateTime</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&lt;!--</span><span style="color:green;">traceOutputOptions=&quot;DateTime,LogicalOperationStack,Callstack&quot;&nbsp;/&gt;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">sharedListeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">switches</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Set&nbsp;the&nbsp;level&nbsp;at&nbsp;which&nbsp;tracing&nbsp;is&nbsp;to&nbsp;occur.&nbsp;Example:&nbsp;&lt;add&nbsp;name=&quot;traceLevel&quot;&nbsp;value=&quot;Error&quot;&nbsp;/&gt;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Valid&nbsp;levels&nbsp;are&nbsp;Off,&nbsp;Critical,&nbsp;Warning,&nbsp;Information,&nbsp;Verbose.&nbsp;Optional:&nbsp;ActivityTracing&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;To&nbsp;turn&nbsp;tracing&nbsp;off&nbsp;set&nbsp;the&nbsp;value&nbsp;attribute&nbsp;to&nbsp;&quot;Off&quot;.&nbsp;Example:&nbsp;&lt;add&nbsp;name=&quot;traceLevel&quot;&nbsp;value=&quot;Off&quot;&nbsp;/&gt;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">traceLevel</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">value</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Information,&nbsp;ActivityTracing</span>&quot;<span style="color:blue;">&nbsp;/&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">switches</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&lt;/</span><span style="color:#a31515;">system.diagnostics</span><span style="color:blue;">&gt;</span></pre>
    <br />
    <h4>Demo 4: Add more listeners</h4>
    <p>
        You can add more listeners and also remove them. Listeners can output the trace events they collect to files, databases, to web services, to the memory, etc.
        Some basic trace listeners are already provided by the .NET Framework. Third party logging frameworks (e.g. log4net) provide additional listeners
        for the .NET Framework to log trace events. In this example we remove the default trace listener (Visual Studio output window) and we add a Ukadc Diagnostics (Codeplex) trace listener and a trace listener for
        Glimpse. Note that Glimpse has known problems with asynchronous code and it stops tracing. After the Glimpse listener is added to the listeners list,
        you must <a href="Glimpse.axd">start</a> Glimpse manually within the running website. If Glimpse runs, you can see the Glimpse panel in the lower right corner.
    </p>
   <pre style="font-family: Consolas; font-size: 13px; color: black; background: white;"><span style="color:blue;">&lt;</span><span style="color:#a31515;">system.diagnostics</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">trace</span><span style="color:blue;">&nbsp;</span><span style="color:red;">autoflush</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">true</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;True,&nbsp;if&nbsp;the&nbsp;content&nbsp;of&nbsp;the&nbsp;trace&nbsp;event&nbsp;cache&nbsp;should&nbsp;be&nbsp;flushed&nbsp;with&nbsp;every&nbsp;trace&nbsp;event&nbsp;(default:&nbsp;false)&nbsp;</span><span style="color:blue;">--&gt;&nbsp;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">sources</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">source</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Backload</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">switchName</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">traceLevel</span>&quot;<span style="color:blue;">&gt;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;name&nbsp;must&nbsp;be&nbsp;&quot;Backload&quot;.&nbsp;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">listeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logfile</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Trace&nbsp;output&nbsp;to&nbsp;log&nbsp;file,&nbsp;but&nbsp;only&nbsp;errors&nbsp;(see&nbsp;filter&nbsp;below)&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">xmlfile</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;XML&nbsp;output&nbsp;for&nbsp;the&nbsp;Microsoft&nbsp;Service&nbsp;Trace&nbsp;Viewer&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">ukadc</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Output&nbsp;for&nbsp;the&nbsp;Ukadc&nbsp;Trace&nbsp;formatter&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Glimpse</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Output&nbsp;for&nbsp;Glimpse&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">remove</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Default</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Remove&nbsp;the&nbsp;default&nbsp;trace&nbsp;listener&nbsp;(Visual&nbsp;Studio&nbsp;output&nbsp;window)&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">listeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">source</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">sources</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">sharedListeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logfile</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">System.Diagnostics.TextWriterTraceListener</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">initializeData</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logs/backload.log</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">traceOutputOptions</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">DateTime</span>&quot;<span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">filter</span><span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">System.Diagnostics.EventTypeFilter</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">initializeData</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Error</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">Only&nbsp;log&nbsp;errors&nbsp;in&nbsp;this&nbsp;listener</span><span style="color:blue;">--&gt;&nbsp;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">add</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">xmlfile</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">System.Diagnostics.XmlWriterTraceListener</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">initializeData</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logs/backload.svclog</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">traceOutputOptions</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">DateTime</span>&quot;<span style="color:blue;">&nbsp;/&gt;&nbsp;&lt;!--</span><span style="color:green;">traceOutputOptions=&quot;DateTime,LogicalOperationStack,Callstack&quot;&nbsp;/&gt;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">ukadc</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Ukadc.Diagnostics.Listeners.FileTraceListener,&nbsp;Ukadc.Diagnostics</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">output</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">{EventType}&nbsp;at&nbsp;{DateTime}&nbsp;({ActivityId}):&nbsp;{Message}</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">filePath</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">logs/backload-ukadc-{Year}-{Month}-{Day}.log</span>&quot;<span style="color:blue;">&nbsp;/&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Glimpse</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">type</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Glimpse.Core.TraceListener,&nbsp;Glimpse.Core</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">traceOutputOptions</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">DateTime</span>&quot;<span style="color:blue;">&nbsp;/&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">sharedListeners</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">switches</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Set&nbsp;the&nbsp;level&nbsp;at&nbsp;which&nbsp;tracing&nbsp;is&nbsp;to&nbsp;occur.&nbsp;Example:&nbsp;&lt;add&nbsp;name=&quot;traceLevel&quot;&nbsp;value=&quot;Error&quot;&nbsp;/&gt;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Valid&nbsp;levels&nbsp;are&nbsp;Off,&nbsp;Critical,&nbsp;Warning,&nbsp;Information,&nbsp;Verbose.&nbsp;Optional:&nbsp;ActivityTracing&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;To&nbsp;turn&nbsp;tracing&nbsp;off&nbsp;set&nbsp;the&nbsp;value&nbsp;attribute&nbsp;to&nbsp;&quot;Off&quot;.&nbsp;Example:&nbsp;&lt;add&nbsp;name=&quot;traceLevel&quot;&nbsp;value=&quot;Off&quot;&nbsp;/&gt;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">traceLevel</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">value</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Information,&nbsp;ActivityTracing</span>&quot;<span style="color:blue;">&nbsp;/&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">switches</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&lt;/</span><span style="color:#a31515;">system.diagnostics</span><span style="color:blue;">&gt;</span></pre>
    <br />
     
    <h4>Demo 5: Turn off tracing</h4>
    <p>
        To turn off tracing simply set the switch level to <code>Off</code>. Another way is to remove all trace listeners from the
        <code>&lt;listeners&gt;</code> list or use <code>&lt;clear /&gt;</code> at the end of the list if you only want to remove them temporarily.
    </p>
    <pre style="font-family: Consolas; font-size: 13px; color: black; background: white;"><span style="color:blue;">&lt;</span><span style="color:#a31515;">system.diagnostics</span><span style="color:blue;">&gt;</span>
  ...
<span style="color:blue;">&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">switches</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Set&nbsp;the&nbsp;level&nbsp;at&nbsp;which&nbsp;tracing&nbsp;is&nbsp;to&nbsp;occur.&nbsp;Example:&nbsp;&lt;add&nbsp;name=&quot;traceLevel&quot;&nbsp;value=&quot;Error&quot;&nbsp;/&gt;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Valid&nbsp;levels&nbsp;are&nbsp;Off,&nbsp;Critical,&nbsp;Warning,&nbsp;Information,&nbsp;Verbose.&nbsp;Optional:&nbsp;ActivityTracing&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;To&nbsp;turn&nbsp;tracing&nbsp;off&nbsp;set&nbsp;the&nbsp;value&nbsp;attribute&nbsp;to&nbsp;&quot;Off&quot;.&nbsp;Example:&nbsp;&lt;add&nbsp;name=&quot;traceLevel&quot;&nbsp;value=&quot;Off&quot;&nbsp;/&gt;&nbsp;</span><span style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">add</span><span style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">traceLevel</span>&quot;<span style="color:blue;">&nbsp;</span><span style="color:red;">value</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">Off</span>&quot;<span style="color:blue;">&nbsp;/&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&lt;/</span><span style="color:#a31515;">switches</span><span style="color:blue;">&gt;</span>
<span style="color:blue;">&lt;/</span><span style="color:#a31515;">system.diagnostics</span><span style="color:blue;">&gt;</span></pre>
   <br />
   <h4>Conclusion</h4>
    <p>
        This example shows how to use tracing with Backload. Trace messages help to better understand the code flow of the component,
        identify problems or log errors even on the production server. Backload uses the standard tracing mechanism of .NET. Almost all
        logging frameworks provide trace listeners for .NET tracing. The only thing you need to know is the name of the trace source Backload 
        has registered, which is "Backload" of course. 
    </p>
    <br />
    <h5>License information</h5>
    <p class="licenses">
        <a href="https://github.com/blackcity/backload" target="_blank">Backload. (Standard version):</a> Copyright 2015, Steffen Habermehl, License (Standard version): <a href="http://www.opensource.org/licenses/MIT" target="_blank">MIT license</a>,<br />
        <a href="mailto:s.habermehl@freenet.de" target="_blank">Professional and Enterprise versions</a> are only available under a commercial license.<br />
        Follow us on Twitter: <a href="https://twitter.com/backload_mvc" target="_blank">&#0064;Backload_MVC</a>
</p>
</div>

