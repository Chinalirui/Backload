@{
    ViewBag.Title = "Backload. Professional ASP.NET MVC File Upload Handler - Example 7";
}

@section styles {   
    <!-- Optional: Include jQuery ui themes for the themes switcher -->
    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/themes/dark-hive/jquery-ui.css" id="theme">
    <!-- Optional: We use the jQuery colorbox plugin to view uploaded images when we click on it. -->
    <link href="~/Content/ColorBox/colorbox.css" rel="stylesheet" />
    <!-- Optional: Some styles for this demo page -->
    <link href="~/Content/styles.css" rel="stylesheet" />
}
    

@section scripts {
    <!-- Optional: We use the jQuery colorbox plugin to view uploaded images when we click on it. -->
    <script src="~/Scripts/ColorBox/jquery.colorbox-min.js"></script>
    <script type="text/javascript" src="~/Scripts/main.js"></script>
}
<div class="ex-head">
<h2><span class="bl">Backload.</span>&nbsp;&nbsp;A professional File Upload handler</h2>
    <span class="theme-switcher-info">Select a jQuery ui theme:</span>
    <select id="theme-switcher" class="theme-switcher">
        <option value="base">Base</option>
        <option value="black-tie">Black Tie</option>
        <option value="blitzer">Blitzer</option>
        <option value="cupertino">Cupertino</option>
        <option value="dark-hive" selected>Dark Hive</option>
        <option value="dot-luv">Dot Luv</option>
        <option value="eggplant">Eggplant</option>
        <option value="excite-bike">Excite Bike</option>
        <option value="flick">Flick</option>
        <option value="hot-sneaks">Hot sneaks</option>
        <option value="humanity">Humanity</option>
        <option value="le-frog">Le Frog</option>
        <option value="mint-choc">Mint Choc</option>
        <option value="overcast">Overcast</option>
        <option value="pepper-grinder">Pepper Grinder</option>
        <option value="redmond">Redmond</option>
        <option value="smoothness">Smoothness</option>
        <option value="south-street">South Street</option>
        <option value="start">Start</option>
        <option value="sunny">Sunny</option>
        <option value="swanky-purse">Swanky Purse</option>
        <option value="trontastic">Trontastic</option>
        <option value="ui-darkness">UI Darkness</option>
        <option value="ui-lightness">UI Lightness</option>
        <option value="vader">Vader</option>
    </select>

    <div class="ex-desc">This is a demo in a series of examples showing the usage and features of <span class="bl">Backload.</span>, a professional full featured ASP.NET MVC file upload server side controller/handler, in the version for the 
        popular <a href="https://github.com/blueimp/jQuery-File-Upload" target="_blank">jQuery File Upload plugin from blueimp</a>. 
        We're using the jQuery ui version here, but you can also use the bootstrap version. This has no influence on the <span class="bl">Backload.</span> controller. For more information on the client side 
        plugin see <a href="https://github.com/blueimp/jQuery-File-Upload" target="_blank">here</a>.<br />
        <span class="ex-imp">Important note:</span> This example uses jQuery 2.0. Older Browsers (e.g. IE < 9) are <a href="http://blog.jquery.com/2013/04/18/jquery-2-0-released/" target="_blank">not supported</a> anymore since v2.0! Use jQuery v1.9.1 instead.
    </div>
</div>
<div class="ex-inf">
<h2>Example 7: Managing subfolders: Using the upload context</h2>
    <p>In example 6 we've created an artists library, where a specific artist has the object context. Let's go a bit further. We want to categorize the work of an artist in youth period, adult period and late period. Files for these categories should be stored in subfolders of the artist with the current object context.
        This task can be automatically done by the upload context feature (client side). Whenever you post an upload context along with your request, the handler will store the uploaded file in the appropriate subfolder with the name of the uploadContext value. The uploadContext value can hold multiple values separated by 
        semicolon which lead to an even more complex folder structure (see example). The easiest way is to place an input field (hidden or text) or select 
        form field within the &lt;form&gt; tag. Another way is to manipulate the url or body before the request starts. (see: <a href="https://github.com/blueimp/jQuery-File-Upload/wiki/How-to-submit-additional-form-data" target="_blank">How to submit additional form data</a>. Note: On GET requests (return uploaded files), 
        subfolders are ignored by default, so the handler will not return files in subfolders. You have to set the attribute getInclSubFolders="true" in the config. 
    </p>
</div>


<form id="fileupload" action="/Backload/UploadHandler" method="POST" enctype="multipart/form-data">
<div class="ex-fup">
    <span class="artists-list-info">Please select an artist:</span>
    <!-- We set the objectContext to the artists name. All files will be stored within a subfolder of this artist -->
    <select id="artists" name="objectContext" class="artists-list">
        <option value="lawrence_alma-tadema">Lawrence Alma-Tadema</option>
        <option value="fra_angelico">Fra Angelico</option>
        <option value="giuseppe_arcimboldo">Giuseppe Arcimboldo</option>
        <option value="hieronymus_bosch">Hieronymus Bosch</option>
        <option value="sandro_botticelli">Sandro Botticelli</option>
        <option value="francois_boucher">Francois Boucher</option>
        <option value="pieter_bruegel">Pieter Bruegel</option>
        <option value="edward_burne-jones">Edward Burne-Jones</option>
        <option value="michelangelo">Michelangelo</option>
        <option value="gustave_caillebotte">Gustave Caillebotte</option>
        <option value="antonio_canaletto">Antonio Canaletto</option>
        <option value="paul_cezanne">Paul Cezanne</option>
        <option value="lucas_cranach">Lucas Cranach</option>
        <option value="jacques_david">Jacques David</option>
        <option value="edgar_degas">Edgar Degas</option>
        <option value="ferdinand_delacroix">Ferdinand Delacroix</option>
        <option value="albrecht_duerer">Albrecht Dürer</option>
        <option value="caspar_david_friedrich">Caspar David Friedrich</option>
        <option value="giotto_di_bondone">Giotto di Bondone</option>
        <option value="paul_gauguin">Paul Gauguin</option>
        <option value="john_grimshaw">John Grimshaw</option>
        <option value="vincent_van_gogh" selected>Vincent Van Gogh</option>
        <option value="joris_hoefnagel">Joris Hoefnagel</option>
        <option value="jean_auguste_ingres">Jean Auguste Ingres</option>
        <option value="gustav_klimt">Gustav Klimt</option>
        <option value="max_liebermann">Max Liebermann</option>
        <option value="jose_de_goya_y_lucientes">Jose de Goya y Lucientes</option>
        <option value="august_macke">August Macke</option>
        <option value="edouard_manet">Edouard Manet</option>
        <option value="john_everett_millais">John Everett Millais</option>
        <option value="raffael">Raffael</option>
        <option value="amedeo_modigliani">Amedeo Modigliani</option>
        <option value="claude_monet">Claude Monet</option>
        <option value="berthe_morisot">Berthe Morisot</option>
        <option value="camille_pissarro">Camille Pissarro</option>
        <option value="rembrandt">Rembrandt</option>
        <option value="pierre_auguste_renoir">Pierre Auguste Renoi</option>
        <option value="jenri_jf_rousseau">Henri J.F. Rousseau</option>
        <option value="peter_paul_rubens">Peter Paul Rubens</option>
        <option value="egon_schiele">Egon Schiele</option>
        <option value="alfred_sisley">Alfred Sisley</option>
        <option value="jacopo_tintoretto">Jacopo Tintoretto</option>
        <option value="tiziano_vecellio">Tiziano Vecellio</option>
        <option value="henry_de_toulouse-lautrec">Henry de Toulouse-Lautrec</option>
        <option value="joseph_turner">Joseph Turner</option>
        <option value="diego_velazquez">Diego Velazquez</option>
        <option value="jan_vermeer">Jan Vermeer</option>
        <option value="leonardo_da_vinci">Leonardo Da Vinci</option>
    </select>
    <span class="periods-list-info">Please select a period:</span>
    <!-- We also use uploadContext to seperate the uploaded files into additional subfolders -->
    <select id="periods" name="uploadContext" class="periods-list">
        <option value="youth">Youth</option>
        <option value="adult" selected>Adulthood</option>
        <option value="late">Later years</option>
        <option value="complex1;complex2;complex3">Complex structure</option>
        <option value="complex1;complex2;complex4">Complex structure 2</option>
    </select>    <p>&nbsp;</p>
<!-- BEGIN: jQuery Fle Upload Plugin -->
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="row fileupload-buttonbar">
        <div class="span7">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="icon-plus icon-white"></i>
                <span>Add files...</span>
                <input type="file" name="files[]" multiple>
            </span>
            <button type="submit" class="btn btn-primary start">
                <i class="icon-upload icon-white"></i>
                <span>Start upload</span>
            </button>
            <button type="reset" class="btn btn-warning cancel">
                <i class="icon-ban-circle icon-white"></i>
                <span>Cancel upload</span>
            </button>
            <button type="button" class="btn btn-danger delete">
                <i class="icon-trash icon-white"></i>
                <span>Delete</span>
            </button>
            <input type="checkbox" class="toggle">
        </div>
        <!-- The global progress information -->
        <div class="span5 fileupload-progress fade">
            <!-- The global progress bar -->
            <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                <div class="bar" style="width:0%;"></div>
            </div>
            <!-- The extended global progress information -->
            <div class="progress-extended">&nbsp;</div>
        </div>
    </div>
    <!-- The loading indicator is shown during file processing -->
    <div class="fileupload-loading"></div>
    <br>
    <!-- The table listing the files available for upload/download -->
    <table id="demo-fup-table" role="presentation" class="table table-striped ui-widget"><tbody class="files ui-widget-content" data-toggle="modal-gallery" data-target="#modal-gallery"></tbody></table>
</div>
</form>

<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade ui-state-hover" data-type="{%=file.type%}">
        <td class="preview"><span class="fade"></span></td>
        <td class="name"><span>{%=file.name%}</span></td>
        <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
        {% if (file.error) { %}
            <td class="error" colspan="2"><span class="label label-important">Error</span> {%=file.error%}</td>
        {% } else if (o.files.valid && !i) { %}
            <td>
                <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="bar" style="width:0%;"></div></div>
            </td>
            <td>{% if (!o.options.autoUpload) { %}
                <button class="btn btn-primary start">
                    <i class="icon-upload icon-white"></i>
                    <span>Start</span>
                </button>
            {% } %}</td>
        {% } else { %}
            <td colspan="2"></td>
        {% } %}
        <td class="action">{% if (!i) { %}
            <button class="btn btn-warning cancel">
                <i class="icon-ban-circle icon-white"></i>
                <span>Cancel</span>
            </button>
        {% } %}</td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade ui-state-default" data-type="{%=file.extra_info.main_type%}" >
        {% if (file.error) { %}
            <td></td>
            <td class="name"><span>{%=file.name%}</span></td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td class="error" colspan="2"><span class="label label-important">Error</span> {%=file.error%}</td>
        {% } else { %}
            <td class="preview">{% if (file.thumbnail_url) { %}
                <a href="{%=file.url%}" target="_blank" title="{%=file.name%}" data-gallery="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
            {% } %}</td>
            <td class="name">
                <a href="{%=file.url%}" target="_blank" title="{%=file.extra_info.original_name%}" data-gallery="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
            </td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td colspan="2"></td>
        {% } %}
        <td class="action">
            <button class="btn btn-danger delete" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}"{% if (file.delete_with_credentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                <i class="icon-trash icon-white"></i>
                <span>Delete</span>
            </button>
            <input type="checkbox" name="delete" value="1" class="toggle">
        </td>
    </tr>
{% } %}
</script>
<!-- END: jQuery Fle Upload Plugin -->

<input type="hidden" name="objectContext" value="user123" />

<div class="ex-inf">
    <h4>How to setup upload context subfolders</h4>
<p>Method 1: Just include an input field (type hidden or text) or a select field within the &lt;form&gt; tag:</p>
<pre style="font-family: Consolas; font-size: 13px; color: black; background: white;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">&lt;</span><span style="color:maroon;">form</span>&nbsp;<span style="color:red;">id</span><span style="color:blue;">=&quot;fileupload&quot;</span>&nbsp;<span style="color:red;">action</span><span style="color:blue;">=&quot;/Backload/UploadHandler&quot;</span>&nbsp;<span style="color:red;">method</span><span style="color:blue;">=&quot;POST&quot;</span>&nbsp;<span style="color:red;">enctype</span><span style="color:blue;">=&quot;multipart/form-data&quot;&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">//&nbsp;Note:&nbsp;If&nbsp;objectContext&nbsp;is&nbsp;empty,&nbsp;uploadContext&nbsp;subfolders&nbsp;are&nbsp;in&nbsp;the&nbsp;global&nbsp;context.</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">&lt;</span><span style="color:maroon;">input</span>&nbsp;<span style="color:red;">type</span><span style="color:blue;">=&quot;hidden&quot;</span>&nbsp;<span style="color:red;">name</span><span style="color:blue;">=&quot;objectContext&quot;</span>&nbsp;<span style="color:red;">value</span><span style="color:blue;">=&quot;raffael&quot;</span>&nbsp;<span style="color:blue;">/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">&lt;</span><span style="color:maroon;">input</span>&nbsp;<span style="color:red;">type</span><span style="color:blue;">=&quot;hidden&quot;</span>&nbsp;<span style="color:red;">name</span><span style="color:blue;">=&quot;uploadContext&quot;</span>&nbsp;<span style="color:red;">value</span><span style="color:blue;">=&quot;adult_period&quot;</span>&nbsp;<span style="color:blue;">/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">&lt;/</span><span style="color:maroon;">form</span><span style="color:blue;">&gt;</span></pre>
<br />
<p>Method 2: Use the client side JQuery File Upload Plugin to send extra forms data:</p>
<pre style="font-family: Consolas; font-size: 13px; color: black; background: white;">&nbsp;&nbsp;&nbsp;&nbsp;$(<span style="color:#a31515;">&#39;#fileupload&#39;</span>).bind(<span style="color:#a31515;">&#39;fileuploadsubmit&#39;</span>,&nbsp;<span style="color:blue;">function</span>&nbsp;(e,&nbsp;data)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">//&nbsp;The&nbsp;example&nbsp;input,&nbsp;doesn&#39;t&nbsp;have&nbsp;to&nbsp;be&nbsp;part&nbsp;of&nbsp;the&nbsp;upload&nbsp;form:</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">var</span>&nbsp;$oc&nbsp;=&nbsp;$(<span style="color:#a31515;">&#39;#objContext&#39;</span>);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">var</span>&nbsp;$uc&nbsp;=&nbsp;$(<span style="color:#a31515;">&#39;#upContext&#39;</span>);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.formData&nbsp;=&nbsp;{&nbsp;objectContext:&nbsp;$oc.val()&nbsp;,&nbsp;uploadContext:&nbsp;$uc.val()&nbsp;};
&nbsp;&nbsp;&nbsp;&nbsp;});
</pre><br />
<p>Method 3: Manipulate the url and add objectContext and uploadContext to the querystring:</p>
<pre style="font-family: Consolas; font-size: 13px; color: black; background: white;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">var</span>&nbsp;fileUploadUrl&nbsp;=&nbsp;<span style="color:#a31515;">&quot;/Backload/UploadHandler?&quot;</span>&nbsp;+&nbsp;<span style="color:#a31515;">&quot;objectContext=raffael&amp;uploadContext=adult_period&quot;</span>;
</pre><br />
<p>Don't forget, to enable the getInclSubFolders attribute in the config, so the Backload. handler will search in subfolders: </p>
<pre style="font-family: Consolas; font-size: 13px; color: black; background: white;"><span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">fileUpload</span><span style="color:blue;">&nbsp;</span><span style="color:red;">getInclSubFolders</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">true</span>&quot;<span style="color:blue;">&nbsp;...&nbsp;/&gt;</span>
</pre><br />
    <h4>Conclusion</h4>
    <p>
        In this example we showed you how to categorize uploaded files in subfolders of an object that has the current object context. 
        Note: You do not need to use objectContext. If objectContext is an empty string (or not provided in the request) the subfolders 
        of the upload context will be stored in the global context. Try the "Complex structure" value of the periods select element. It strores
        files in a complex subfolder structure. The value of "Complex structure" is "complex1;complex2;complex3". This will lead to the following 
        file path: "[objectContext]/complex1/complex2/complex3/[uploaded file]. For more information on how to include extra forms data before a client 
        side request starts, consult the <a href="https://github.com/blueimp/jQuery-File-Upload/wiki/How-to-submit-additional-form-data" target="_blank">docs</a> of the client side plugin.

    </p>
    <br />
    <h5>License information</h5>
    <p class="licenses">
        <a href="https://github.com/blackcity/backload" target="_blank">Backload. (Standard version):</a> Copyright 2015, Steffen Habermehl, License (Standard version): <a href="http://www.opensource.org/licenses/MIT" target="_blank">MIT license</a>,<br />
        <a href="mailto:s.habermehl@freenet.de" target="_blank">Professional and Enterprise versions</a> are only available under a commercial license.<br />
        Follow us on Twitter: <a href="https://twitter.com/backload_mvc" target="_blank">&#0064;Backload_MVC</a>
</p>

</div>

