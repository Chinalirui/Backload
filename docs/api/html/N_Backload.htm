<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Backload Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Backload namespace" /><meta name="Microsoft.Help.F1" content="Backload" /><meta name="Microsoft.Help.Id" content="N:Backload" /><meta name="Description" content="Root namespace for all sub-namespaces and types. This namespace contains the important class implementing the interface. An instance of this type, created by calling the static method, is the central starting point for all further operations." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Backload" /><meta name="file" content="N_Backload" /><meta name="guid" content="N_Backload" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Backload Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Backload Documentation" tocid="roottoc">Backload Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Backload root namespace" tocid="R_Project_Documentation">Backload root namespace</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Backload.htm" title="Backload" tocid="N_Backload">Backload</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Backload_DisposableObjects.htm" title="DisposableObjects Class" tocid="T_Backload_DisposableObjects">DisposableObjects Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Backload_FileHandler.htm" title="FileHandler Class" tocid="T_Backload_FileHandler">FileHandler Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Backload Namespace</td></tr></table><span class="introStyle"></span><div class="summary"><p>
             Root namespace for all sub-namespaces and types. This namespace contains the important 
             <a href="T_Backload_FileHandler.htm">FileHandler</a> class implementing the <a href="T_Backload_Contracts_FileHandler_IFileHandler.htm">IFileHandler</a>
             interface. An instance of this type, created by calling the static <a href="M_Backload_FileHandler_Create.htm">Create<span id="LST939EE29D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST939EE29D_0?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
             method, is the central starting point for all further operations.
             </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Backload_DisposableObjects.htm">DisposableObjects</a></td><td><div class="summary">
            Provides a list of all objects to be disposed
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Backload_FileHandler.htm">FileHandler</a></td><td><div class="summary"><p><a href="T_Backload_FileHandler.htm">FileHandler</a> is derived from the <a href="T_Backload_Contracts_FileHandler_IFileHandler.htm">IFileHandler</a>
            interface. It is the main handler class in the component and most types within the namespace are accessible 
            in properties and sub-types. The component is fully configurable from a configuration file (Web.Backload.config)
            or in code (Configuration property in <a href="P_Backload_Contracts_FileHandler_IFileHandler_Context.htm">Context</a>).
            </p><p>
            The integrated execution pipeline is a convenient way to perform all required tasks like reading the request 
            context, process files and returning a result with only one line code. It can be executed by calling the 
            <a href="M_Backload_FileHandler_Execute.htm">Execute<span id="LST939EE29D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST939EE29D_1?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> method.
            </p><p>
            When running the execution pipeline, server side <a href="P_Backload_FileHandler_Events.htm">Events</a> events are available
            for the most important execution steps during code execution. These events allow custom code to change values
            before the processing step executes, to change results or to log events. They also help to keep your code clean.
            </p><p>
            Furthermore, high-level and low-level API's are available in <a href="P_Backload_FileHandler_Services.htm">Services</a>.
            </p></div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Tip" /> Tip</th></tr><tr><td>It is strongly recommended to use the inferfaces provided in the <span class="nolink">Backload.Contracts</span> namespace wherever possible instead of the implementations.</td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection">
             This standard code example creates an <a href="T_Backload_Contracts_FileHandler_IFileHandler.htm">IFileHandler</a> derived 
             instance and calls the execution pipeline.
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAABBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CustomController : Controller
{

    <span class="highlight-comment">// File handler endpoint URL for client side AJAX requests: var url = "/{Application}/Custom/FileHandler/";.</span>
    [AcceptVerbs(HttpVerbs.Get | HttpVerbs.Post | HttpVerbs.Put | HttpVerbs.Delete | HttpVerbs.Options)]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">async</span> Task&lt;ActionResult&gt; FileHandler()
    {
        <span class="highlight-keyword">try</span>
        {
            <span class="highlight-comment">// Create and initialize the handler</span>
            IFileHandler handler = Backload.FileHandler.Create();
            handler.Init(HttpContext.Request);

            <span class="highlight-comment">// Optional: Register event handlers to server side events</span>
            handler.Events.StoreFileRequestStarted += Events_StoreFileRequestStarted;

            <span class="highlight-comment">// Call the execution pipeline and get the result</span>
            IBackloadResult result = <span class="highlight-keyword">await</span> handler.Execute();

            <span class="highlight-comment">// Helper to create an ActionResult object from the IBackloadResult instance</span>
            <span class="highlight-keyword">return</span> ResultCreator.Create(result);

        }
        <span class="highlight-keyword">catch</span>
        {
            <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> HttpStatusCodeResult(HttpStatusCode.InternalServerError);
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAABBA");</script></div></div></div><div id="pageFooter" class="pageFooter"><a href="http://www.backload.org">http://www.backload.org</a> | <a href="https://github.com/blackcity/backload/wiki">Dokumentation and examples on GitHub</a><p><a href="http://www.backload.org" target="_blank">Copyright 2016 - Steffen Habermehl</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:backload.org%40gmail.com?Subject=Backload Documentation">this email address</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>